{"remainingRequest":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\src\\Curriculum\\README.md?vue&type=template&id=51bd3b38","dependencies":[{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\src\\Curriculum\\README.md","mtime":1700136402380},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700130500340},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700130500340},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\babel-loader\\lib\\index.js","mtime":1700130500143},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1700130506434},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700130500340},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\vue-loader\\lib\\index.js","mtime":1700130506434},{"path":"C:\\WORKSPCE\\Personal\\Softwareentwicklung\\VpeFreelancerPage\\vperepos.github.io\\docs\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1700130499711}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}